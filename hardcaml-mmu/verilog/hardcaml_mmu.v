`timescale 1ns / 1ns

// Generated by mmu.exe

module hardcaml_mmu (
    address,
    reset_n,
    eeprom_ce_n,
    ram_ce_n,
    via_ce_n,
    acia_ce_n
);

    input [2:0] address;
    input reset_n;
    output eeprom_ce_n;
    output ram_ce_n;
    output via_ce_n;
    output acia_ce_n;

    /* signal declarations */
    wire _40;
    wire _41;
    wire _42;
    wire _43;
    wire _44;
    wire _45;
    wire _46;
    wire _39 = 1'b1;
    wire _47;
    wire _49;
    wire _50;
    wire _51;
    wire _52;
    wire _48 = 1'b1;
    wire _53;
    wire _55;
    wire _54 = 1'b1;
    wire _56;
    wire _58;
    wire _59;
    wire _60;
    wire _61;
    wire _62;
    wire _63;
    wire _57 = 1'b1;
    wire _64;

    /* logic */
    assign _40 = address[0:0];
    assign _41 = address[1:1];
    assign _42 = ~ _41;
    assign _43 = address[2:2];
    assign _44 = ~ _43;
    assign _45 = _44 | _42;
    assign _46 = _45 | _40;
    assign _47 = reset_n ? _46 : _39;
    assign _49 = address[1:1];
    assign _50 = address[2:2];
    assign _51 = ~ _50;
    assign _52 = _51 | _49;
    assign _53 = reset_n ? _52 : _48;
    assign _55 = address[2:2];
    assign _56 = reset_n ? _55 : _54;
    assign _58 = address[0:0];
    assign _59 = address[1:1];
    assign _60 = address[2:2];
    assign _61 = _60 & _59;
    assign _62 = _61 & _58;
    assign _63 = ~ _62;
    assign _64 = reset_n ? _63 : _57;

    /* aliases */

    /* output assignments */
    assign eeprom_ce_n = _64;
    assign ram_ce_n = _56;
    assign via_ce_n = _53;
    assign acia_ce_n = _47;

endmodule
